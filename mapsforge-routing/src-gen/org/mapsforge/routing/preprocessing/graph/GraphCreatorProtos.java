// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/mapsforge/routing/preprocessing/graph/pbf-Config.proto

package org.mapsforge.routing.preprocessing.graph;

public final class GraphCreatorProtos {
  private GraphCreatorProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GeoCoordinatePBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required double latitude = 1;
    boolean hasLatitude();
    double getLatitude();
    
    // required double longitude = 2;
    boolean hasLongitude();
    double getLongitude();
  }
  public static final class GeoCoordinatePBF extends
      com.google.protobuf.GeneratedMessage
      implements GeoCoordinatePBFOrBuilder {
    // Use GeoCoordinatePBF.newBuilder() to construct.
    private GeoCoordinatePBF(Builder builder) {
      super(builder);
    }
    private GeoCoordinatePBF(boolean noInit) {}
    
    private static final GeoCoordinatePBF defaultInstance;
    public static GeoCoordinatePBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public GeoCoordinatePBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required double latitude = 1;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private double latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getLatitude() {
      return latitude_;
    }
    
    // required double longitude = 2;
    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getLongitude() {
      return longitude_;
    }
    
    private void initFields() {
      latitude_ = 0D;
      longitude_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLatitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLongitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, longitude_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, longitude_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        latitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        longitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.longitude_ = longitude_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance()) return this;
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLatitude()) {
          
          return false;
        }
        if (!hasLongitude()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              latitude_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              longitude_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required double latitude = 1;
      private double latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(double value) {
        bitField0_ |= 0x00000001;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0D;
        onChanged();
        return this;
      }
      
      // required double longitude = 2;
      private double longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(double value) {
        bitField0_ |= 0x00000002;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF)
    }
    
    static {
      defaultInstance = new GeoCoordinatePBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF)
  }
  
  public interface KeyValuePairPBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string value = 1;
    boolean hasValue();
    String getValue();
    
    // required string key = 2;
    boolean hasKey();
    String getKey();
  }
  public static final class KeyValuePairPBF extends
      com.google.protobuf.GeneratedMessage
      implements KeyValuePairPBFOrBuilder {
    // Use KeyValuePairPBF.newBuilder() to construct.
    private KeyValuePairPBF(Builder builder) {
      super(builder);
    }
    private KeyValuePairPBF(boolean noInit) {}
    
    private static final KeyValuePairPBF defaultInstance;
    public static KeyValuePairPBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public KeyValuePairPBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.lang.Object value_;
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          value_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private java.lang.Object key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          key_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      value_ = "";
      key_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getKeyBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getKeyBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.key_ = key_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasKey()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              key_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string value = 1;
      private java.lang.Object value_ = "";
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          value_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setValue(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      void setValue(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
      }
      
      // required string key = 2;
      private java.lang.Object key_ = "";
      public boolean hasKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
        return this;
      }
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      void setKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        key_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF)
    }
    
    static {
      defaultInstance = new KeyValuePairPBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF)
  }
  
  public interface RelationMemberPBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required uint64 memberId = 1;
    boolean hasMemberId();
    long getMemberId();
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF.MemberType memberType = 2;
    boolean hasMemberType();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType getMemberType();
    
    // optional string memberRole = 3;
    boolean hasMemberRole();
    String getMemberRole();
  }
  public static final class RelationMemberPBF extends
      com.google.protobuf.GeneratedMessage
      implements RelationMemberPBFOrBuilder {
    // Use RelationMemberPBF.newBuilder() to construct.
    private RelationMemberPBF(Builder builder) {
      super(builder);
    }
    private RelationMemberPBF(boolean noInit) {}
    
    private static final RelationMemberPBF defaultInstance;
    public static RelationMemberPBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public RelationMemberPBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_fieldAccessorTable;
    }
    
    public enum MemberType
        implements com.google.protobuf.ProtocolMessageEnum {
      NODE(0, 1),
      WAY(1, 2),
      RELATION(2, 3),
      ;
      
      public static final int NODE_VALUE = 1;
      public static final int WAY_VALUE = 2;
      public static final int RELATION_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static MemberType valueOf(int value) {
        switch (value) {
          case 1: return NODE;
          case 2: return WAY;
          case 3: return RELATION;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<MemberType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MemberType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MemberType>() {
              public MemberType findValueByNumber(int number) {
                return MemberType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final MemberType[] VALUES = {
        NODE, WAY, RELATION, 
      };
      
      public static MemberType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private MemberType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF.MemberType)
    }
    
    private int bitField0_;
    // required uint64 memberId = 1;
    public static final int MEMBERID_FIELD_NUMBER = 1;
    private long memberId_;
    public boolean hasMemberId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getMemberId() {
      return memberId_;
    }
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF.MemberType memberType = 2;
    public static final int MEMBERTYPE_FIELD_NUMBER = 2;
    private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType memberType_;
    public boolean hasMemberType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType getMemberType() {
      return memberType_;
    }
    
    // optional string memberRole = 3;
    public static final int MEMBERROLE_FIELD_NUMBER = 3;
    private java.lang.Object memberRole_;
    public boolean hasMemberRole() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getMemberRole() {
      java.lang.Object ref = memberRole_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          memberRole_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMemberRoleBytes() {
      java.lang.Object ref = memberRole_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        memberRole_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      memberId_ = 0L;
      memberType_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType.NODE;
      memberRole_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasMemberId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, memberId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, memberType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMemberRoleBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, memberId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, memberType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMemberRoleBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        memberId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        memberType_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType.NODE;
        bitField0_ = (bitField0_ & ~0x00000002);
        memberRole_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.memberId_ = memberId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.memberType_ = memberType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.memberRole_ = memberRole_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDefaultInstance()) return this;
        if (other.hasMemberId()) {
          setMemberId(other.getMemberId());
        }
        if (other.hasMemberType()) {
          setMemberType(other.getMemberType());
        }
        if (other.hasMemberRole()) {
          setMemberRole(other.getMemberRole());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasMemberId()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              memberId_ = input.readUInt64();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType value = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                memberType_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              memberRole_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required uint64 memberId = 1;
      private long memberId_ ;
      public boolean hasMemberId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getMemberId() {
        return memberId_;
      }
      public Builder setMemberId(long value) {
        bitField0_ |= 0x00000001;
        memberId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMemberId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        memberId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF.MemberType memberType = 2;
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType memberType_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType.NODE;
      public boolean hasMemberType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType getMemberType() {
        return memberType_;
      }
      public Builder setMemberType(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        memberType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMemberType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        memberType_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.MemberType.NODE;
        onChanged();
        return this;
      }
      
      // optional string memberRole = 3;
      private java.lang.Object memberRole_ = "";
      public boolean hasMemberRole() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getMemberRole() {
        java.lang.Object ref = memberRole_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          memberRole_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMemberRole(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        memberRole_ = value;
        onChanged();
        return this;
      }
      public Builder clearMemberRole() {
        bitField0_ = (bitField0_ & ~0x00000004);
        memberRole_ = getDefaultInstance().getMemberRole();
        onChanged();
        return this;
      }
      void setMemberRole(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        memberRole_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF)
    }
    
    static {
      defaultInstance = new RelationMemberPBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF)
  }
  
  public interface CompleteNodePBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
    boolean hasCoordinate();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder();
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> 
        getAdditionalTagsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index);
    int getAdditionalTagsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index);
  }
  public static final class CompleteNodePBF extends
      com.google.protobuf.GeneratedMessage
      implements CompleteNodePBFOrBuilder {
    // Use CompleteNodePBF.newBuilder() to construct.
    private CompleteNodePBF(Builder builder) {
      super(builder);
    }
    private CompleteNodePBF(boolean noInit) {}
    
    private static final CompleteNodePBF defaultInstance;
    public static CompleteNodePBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public CompleteNodePBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
    public static final int COORDINATE_FIELD_NUMBER = 2;
    private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF coordinate_;
    public boolean hasCoordinate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate() {
      return coordinate_;
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder() {
      return coordinate_;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
    public static final int ADDITIONALTAGS_FIELD_NUMBER = 3;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
      return additionalTags_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList() {
      return additionalTags_;
    }
    public int getAdditionalTagsCount() {
      return additionalTags_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
      return additionalTags_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index) {
      return additionalTags_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
      additionalTags_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCoordinate()) {
        if (!getCoordinate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAdditionalTagsCount(); i++) {
        if (!getAdditionalTags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, coordinate_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        output.writeMessage(3, additionalTags_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, coordinate_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, additionalTags_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCoordinateFieldBuilder();
          getAdditionalTagsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (coordinateBuilder_ == null) {
          coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
        } else {
          coordinateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          additionalTagsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (coordinateBuilder_ == null) {
          result.coordinate_ = coordinate_;
        } else {
          result.coordinate_ = coordinateBuilder_.build();
        }
        if (additionalTagsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            additionalTags_ = java.util.Collections.unmodifiableList(additionalTags_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.additionalTags_ = additionalTags_;
        } else {
          result.additionalTags_ = additionalTagsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCoordinate()) {
          mergeCoordinate(other.getCoordinate());
        }
        if (additionalTagsBuilder_ == null) {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTags_.isEmpty()) {
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAdditionalTagsIsMutable();
              additionalTags_.addAll(other.additionalTags_);
            }
            onChanged();
          }
        } else {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTagsBuilder_.isEmpty()) {
              additionalTagsBuilder_.dispose();
              additionalTagsBuilder_ = null;
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000004);
              additionalTagsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdditionalTagsFieldBuilder() : null;
            } else {
              additionalTagsBuilder_.addAllMessages(other.additionalTags_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (hasCoordinate()) {
          if (!getCoordinate().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAdditionalTagsCount(); i++) {
          if (!getAdditionalTags(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder();
              if (hasCoordinate()) {
                subBuilder.mergeFrom(getCoordinate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCoordinate(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAdditionalTags(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> coordinateBuilder_;
      public boolean hasCoordinate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate() {
        if (coordinateBuilder_ == null) {
          return coordinate_;
        } else {
          return coordinateBuilder_.getMessage();
        }
      }
      public Builder setCoordinate(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (coordinateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          coordinate_ = value;
          onChanged();
        } else {
          coordinateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setCoordinate(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder builderForValue) {
        if (coordinateBuilder_ == null) {
          coordinate_ = builderForValue.build();
          onChanged();
        } else {
          coordinateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeCoordinate(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (coordinateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              coordinate_ != org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance()) {
            coordinate_ =
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder(coordinate_).mergeFrom(value).buildPartial();
          } else {
            coordinate_ = value;
          }
          onChanged();
        } else {
          coordinateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearCoordinate() {
        if (coordinateBuilder_ == null) {
          coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
          onChanged();
        } else {
          coordinateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder getCoordinateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCoordinateFieldBuilder().getBuilder();
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder() {
        if (coordinateBuilder_ != null) {
          return coordinateBuilder_.getMessageOrBuilder();
        } else {
          return coordinate_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
          getCoordinateFieldBuilder() {
        if (coordinateBuilder_ == null) {
          coordinateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder>(
                  coordinate_,
                  getParentForChildren(),
                  isClean());
          coordinate_ = null;
        }
        return coordinateBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_ =
        java.util.Collections.emptyList();
      private void ensureAdditionalTagsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          additionalTags_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF>(additionalTags_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> additionalTagsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
        if (additionalTagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(additionalTags_);
        } else {
          return additionalTagsBuilder_.getMessageList();
        }
      }
      public int getAdditionalTagsCount() {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.size();
        } else {
          return additionalTagsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);
        } else {
          return additionalTagsBuilder_.getMessage(index);
        }
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAdditionalTags(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> values) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          super.addAll(values, additionalTags_);
          onChanged();
        } else {
          additionalTagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAdditionalTags() {
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          additionalTagsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.remove(index);
          onChanged();
        } else {
          additionalTagsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder getAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
          int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);  } else {
          return additionalTagsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
           getAdditionalTagsOrBuilderList() {
        if (additionalTagsBuilder_ != null) {
          return additionalTagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(additionalTags_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder() {
        return getAdditionalTagsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder> 
           getAdditionalTagsBuilderList() {
        return getAdditionalTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
          getAdditionalTagsFieldBuilder() {
        if (additionalTagsBuilder_ == null) {
          additionalTagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder>(
                  additionalTags_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          additionalTags_ = null;
        }
        return additionalTagsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteNodePBF)
    }
    
    static {
      defaultInstance = new CompleteNodePBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteNodePBF)
  }
  
  public interface CompleteEdgePBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 sourceID = 2;
    boolean hasSourceID();
    int getSourceID();
    
    // optional int32 targetID = 3;
    boolean hasTargetID();
    int getTargetID();
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF allWaypoints = 4;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> 
        getAllWaypointsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getAllWaypoints(int index);
    int getAllWaypointsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
        getAllWaypointsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getAllWaypointsOrBuilder(
        int index);
    
    // optional string name = 5;
    boolean hasName();
    String getName();
    
    // optional string type = 6;
    boolean hasType();
    String getType();
    
    // optional bool roundabout = 7;
    boolean hasRoundabout();
    boolean getRoundabout();
    
    // optional bool isOneWay = 8;
    boolean hasIsOneWay();
    boolean getIsOneWay();
    
    // optional string ref = 9;
    boolean hasRef();
    String getRef();
    
    // optional string destination = 10;
    boolean hasDestination();
    String getDestination();
    
    // optional int32 weight = 11;
    boolean hasWeight();
    int getWeight();
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 12;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> 
        getAdditionalTagsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index);
    int getAdditionalTagsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index);
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteNodePBF allUsedNodes = 13;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> 
        getAllUsedNodesList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF getAllUsedNodes(int index);
    int getAllUsedNodesCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder> 
        getAllUsedNodesOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder getAllUsedNodesOrBuilder(
        int index);
  }
  public static final class CompleteEdgePBF extends
      com.google.protobuf.GeneratedMessage
      implements CompleteEdgePBFOrBuilder {
    // Use CompleteEdgePBF.newBuilder() to construct.
    private CompleteEdgePBF(Builder builder) {
      super(builder);
    }
    private CompleteEdgePBF(boolean noInit) {}
    
    private static final CompleteEdgePBF defaultInstance;
    public static CompleteEdgePBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public CompleteEdgePBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 sourceID = 2;
    public static final int SOURCEID_FIELD_NUMBER = 2;
    private int sourceID_;
    public boolean hasSourceID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSourceID() {
      return sourceID_;
    }
    
    // optional int32 targetID = 3;
    public static final int TARGETID_FIELD_NUMBER = 3;
    private int targetID_;
    public boolean hasTargetID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getTargetID() {
      return targetID_;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF allWaypoints = 4;
    public static final int ALLWAYPOINTS_FIELD_NUMBER = 4;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> allWaypoints_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> getAllWaypointsList() {
      return allWaypoints_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
        getAllWaypointsOrBuilderList() {
      return allWaypoints_;
    }
    public int getAllWaypointsCount() {
      return allWaypoints_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getAllWaypoints(int index) {
      return allWaypoints_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getAllWaypointsOrBuilder(
        int index) {
      return allWaypoints_.get(index);
    }
    
    // optional string name = 5;
    public static final int NAME_FIELD_NUMBER = 5;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string type = 6;
    public static final int TYPE_FIELD_NUMBER = 6;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool roundabout = 7;
    public static final int ROUNDABOUT_FIELD_NUMBER = 7;
    private boolean roundabout_;
    public boolean hasRoundabout() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getRoundabout() {
      return roundabout_;
    }
    
    // optional bool isOneWay = 8;
    public static final int ISONEWAY_FIELD_NUMBER = 8;
    private boolean isOneWay_;
    public boolean hasIsOneWay() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getIsOneWay() {
      return isOneWay_;
    }
    
    // optional string ref = 9;
    public static final int REF_FIELD_NUMBER = 9;
    private java.lang.Object ref_;
    public boolean hasRef() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getRef() {
      java.lang.Object ref = ref_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ref_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRefBytes() {
      java.lang.Object ref = ref_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ref_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string destination = 10;
    public static final int DESTINATION_FIELD_NUMBER = 10;
    private java.lang.Object destination_;
    public boolean hasDestination() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getDestination() {
      java.lang.Object ref = destination_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          destination_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDestinationBytes() {
      java.lang.Object ref = destination_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        destination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 weight = 11;
    public static final int WEIGHT_FIELD_NUMBER = 11;
    private int weight_;
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getWeight() {
      return weight_;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 12;
    public static final int ADDITIONALTAGS_FIELD_NUMBER = 12;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
      return additionalTags_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList() {
      return additionalTags_;
    }
    public int getAdditionalTagsCount() {
      return additionalTags_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
      return additionalTags_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index) {
      return additionalTags_.get(index);
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteNodePBF allUsedNodes = 13;
    public static final int ALLUSEDNODES_FIELD_NUMBER = 13;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> allUsedNodes_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> getAllUsedNodesList() {
      return allUsedNodes_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder> 
        getAllUsedNodesOrBuilderList() {
      return allUsedNodes_;
    }
    public int getAllUsedNodesCount() {
      return allUsedNodes_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF getAllUsedNodes(int index) {
      return allUsedNodes_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder getAllUsedNodesOrBuilder(
        int index) {
      return allUsedNodes_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      sourceID_ = 0;
      targetID_ = 0;
      allWaypoints_ = java.util.Collections.emptyList();
      name_ = "";
      type_ = "";
      roundabout_ = false;
      isOneWay_ = false;
      ref_ = "";
      destination_ = "";
      weight_ = 0;
      additionalTags_ = java.util.Collections.emptyList();
      allUsedNodes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAllWaypointsCount(); i++) {
        if (!getAllWaypoints(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAdditionalTagsCount(); i++) {
        if (!getAdditionalTags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAllUsedNodesCount(); i++) {
        if (!getAllUsedNodes(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sourceID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, targetID_);
      }
      for (int i = 0; i < allWaypoints_.size(); i++) {
        output.writeMessage(4, allWaypoints_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getTypeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, roundabout_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, isOneWay_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getRefBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getDestinationBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, weight_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        output.writeMessage(12, additionalTags_.get(i));
      }
      for (int i = 0; i < allUsedNodes_.size(); i++) {
        output.writeMessage(13, allUsedNodes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sourceID_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, targetID_);
      }
      for (int i = 0; i < allWaypoints_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, allWaypoints_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getTypeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, roundabout_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isOneWay_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getRefBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getDestinationBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, weight_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, additionalTags_.get(i));
      }
      for (int i = 0; i < allUsedNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, allUsedNodes_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllWaypointsFieldBuilder();
          getAdditionalTagsFieldBuilder();
          getAllUsedNodesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        targetID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (allWaypointsBuilder_ == null) {
          allWaypoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          allWaypointsBuilder_.clear();
        }
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        roundabout_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        isOneWay_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        ref_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        destination_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        weight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          additionalTagsBuilder_.clear();
        }
        if (allUsedNodesBuilder_ == null) {
          allUsedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          allUsedNodesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sourceID_ = sourceID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.targetID_ = targetID_;
        if (allWaypointsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            allWaypoints_ = java.util.Collections.unmodifiableList(allWaypoints_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.allWaypoints_ = allWaypoints_;
        } else {
          result.allWaypoints_ = allWaypointsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.roundabout_ = roundabout_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.isOneWay_ = isOneWay_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ref_ = ref_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.destination_ = destination_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.weight_ = weight_;
        if (additionalTagsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            additionalTags_ = java.util.Collections.unmodifiableList(additionalTags_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.additionalTags_ = additionalTags_;
        } else {
          result.additionalTags_ = additionalTagsBuilder_.build();
        }
        if (allUsedNodesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            allUsedNodes_ = java.util.Collections.unmodifiableList(allUsedNodes_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.allUsedNodes_ = allUsedNodes_;
        } else {
          result.allUsedNodes_ = allUsedNodesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSourceID()) {
          setSourceID(other.getSourceID());
        }
        if (other.hasTargetID()) {
          setTargetID(other.getTargetID());
        }
        if (allWaypointsBuilder_ == null) {
          if (!other.allWaypoints_.isEmpty()) {
            if (allWaypoints_.isEmpty()) {
              allWaypoints_ = other.allWaypoints_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAllWaypointsIsMutable();
              allWaypoints_.addAll(other.allWaypoints_);
            }
            onChanged();
          }
        } else {
          if (!other.allWaypoints_.isEmpty()) {
            if (allWaypointsBuilder_.isEmpty()) {
              allWaypointsBuilder_.dispose();
              allWaypointsBuilder_ = null;
              allWaypoints_ = other.allWaypoints_;
              bitField0_ = (bitField0_ & ~0x00000008);
              allWaypointsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllWaypointsFieldBuilder() : null;
            } else {
              allWaypointsBuilder_.addAllMessages(other.allWaypoints_);
            }
          }
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasRoundabout()) {
          setRoundabout(other.getRoundabout());
        }
        if (other.hasIsOneWay()) {
          setIsOneWay(other.getIsOneWay());
        }
        if (other.hasRef()) {
          setRef(other.getRef());
        }
        if (other.hasDestination()) {
          setDestination(other.getDestination());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (additionalTagsBuilder_ == null) {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTags_.isEmpty()) {
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureAdditionalTagsIsMutable();
              additionalTags_.addAll(other.additionalTags_);
            }
            onChanged();
          }
        } else {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTagsBuilder_.isEmpty()) {
              additionalTagsBuilder_.dispose();
              additionalTagsBuilder_ = null;
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000800);
              additionalTagsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdditionalTagsFieldBuilder() : null;
            } else {
              additionalTagsBuilder_.addAllMessages(other.additionalTags_);
            }
          }
        }
        if (allUsedNodesBuilder_ == null) {
          if (!other.allUsedNodes_.isEmpty()) {
            if (allUsedNodes_.isEmpty()) {
              allUsedNodes_ = other.allUsedNodes_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureAllUsedNodesIsMutable();
              allUsedNodes_.addAll(other.allUsedNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.allUsedNodes_.isEmpty()) {
            if (allUsedNodesBuilder_.isEmpty()) {
              allUsedNodesBuilder_.dispose();
              allUsedNodesBuilder_ = null;
              allUsedNodes_ = other.allUsedNodes_;
              bitField0_ = (bitField0_ & ~0x00001000);
              allUsedNodesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllUsedNodesFieldBuilder() : null;
            } else {
              allUsedNodesBuilder_.addAllMessages(other.allUsedNodes_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        for (int i = 0; i < getAllWaypointsCount(); i++) {
          if (!getAllWaypoints(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAdditionalTagsCount(); i++) {
          if (!getAdditionalTags(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAllUsedNodesCount(); i++) {
          if (!getAllUsedNodes(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sourceID_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              targetID_ = input.readInt32();
              break;
            }
            case 34: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAllWaypoints(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              name_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              type_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              roundabout_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              isOneWay_ = input.readBool();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              ref_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              destination_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              weight_ = input.readInt32();
              break;
            }
            case 98: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAdditionalTags(subBuilder.buildPartial());
              break;
            }
            case 106: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAllUsedNodes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sourceID = 2;
      private int sourceID_ ;
      public boolean hasSourceID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSourceID() {
        return sourceID_;
      }
      public Builder setSourceID(int value) {
        bitField0_ |= 0x00000002;
        sourceID_ = value;
        onChanged();
        return this;
      }
      public Builder clearSourceID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sourceID_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 targetID = 3;
      private int targetID_ ;
      public boolean hasTargetID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getTargetID() {
        return targetID_;
      }
      public Builder setTargetID(int value) {
        bitField0_ |= 0x00000004;
        targetID_ = value;
        onChanged();
        return this;
      }
      public Builder clearTargetID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetID_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF allWaypoints = 4;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> allWaypoints_ =
        java.util.Collections.emptyList();
      private void ensureAllWaypointsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          allWaypoints_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF>(allWaypoints_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> allWaypointsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> getAllWaypointsList() {
        if (allWaypointsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allWaypoints_);
        } else {
          return allWaypointsBuilder_.getMessageList();
        }
      }
      public int getAllWaypointsCount() {
        if (allWaypointsBuilder_ == null) {
          return allWaypoints_.size();
        } else {
          return allWaypointsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getAllWaypoints(int index) {
        if (allWaypointsBuilder_ == null) {
          return allWaypoints_.get(index);
        } else {
          return allWaypointsBuilder_.getMessage(index);
        }
      }
      public Builder setAllWaypoints(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (allWaypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllWaypointsIsMutable();
          allWaypoints_.set(index, value);
          onChanged();
        } else {
          allWaypointsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAllWaypoints(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder builderForValue) {
        if (allWaypointsBuilder_ == null) {
          ensureAllWaypointsIsMutable();
          allWaypoints_.set(index, builderForValue.build());
          onChanged();
        } else {
          allWaypointsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWaypoints(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (allWaypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllWaypointsIsMutable();
          allWaypoints_.add(value);
          onChanged();
        } else {
          allWaypointsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAllWaypoints(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (allWaypointsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllWaypointsIsMutable();
          allWaypoints_.add(index, value);
          onChanged();
        } else {
          allWaypointsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAllWaypoints(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder builderForValue) {
        if (allWaypointsBuilder_ == null) {
          ensureAllWaypointsIsMutable();
          allWaypoints_.add(builderForValue.build());
          onChanged();
        } else {
          allWaypointsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAllWaypoints(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder builderForValue) {
        if (allWaypointsBuilder_ == null) {
          ensureAllWaypointsIsMutable();
          allWaypoints_.add(index, builderForValue.build());
          onChanged();
        } else {
          allWaypointsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAllWaypoints(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF> values) {
        if (allWaypointsBuilder_ == null) {
          ensureAllWaypointsIsMutable();
          super.addAll(values, allWaypoints_);
          onChanged();
        } else {
          allWaypointsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAllWaypoints() {
        if (allWaypointsBuilder_ == null) {
          allWaypoints_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          allWaypointsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAllWaypoints(int index) {
        if (allWaypointsBuilder_ == null) {
          ensureAllWaypointsIsMutable();
          allWaypoints_.remove(index);
          onChanged();
        } else {
          allWaypointsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder getAllWaypointsBuilder(
          int index) {
        return getAllWaypointsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getAllWaypointsOrBuilder(
          int index) {
        if (allWaypointsBuilder_ == null) {
          return allWaypoints_.get(index);  } else {
          return allWaypointsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
           getAllWaypointsOrBuilderList() {
        if (allWaypointsBuilder_ != null) {
          return allWaypointsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allWaypoints_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder addAllWaypointsBuilder() {
        return getAllWaypointsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder addAllWaypointsBuilder(
          int index) {
        return getAllWaypointsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder> 
           getAllWaypointsBuilderList() {
        return getAllWaypointsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
          getAllWaypointsFieldBuilder() {
        if (allWaypointsBuilder_ == null) {
          allWaypointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder>(
                  allWaypoints_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          allWaypoints_ = null;
        }
        return allWaypointsBuilder_;
      }
      
      // optional string name = 5;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        name_ = value;
        onChanged();
      }
      
      // optional string type = 6;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        type_ = value;
        onChanged();
      }
      
      // optional bool roundabout = 7;
      private boolean roundabout_ ;
      public boolean hasRoundabout() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getRoundabout() {
        return roundabout_;
      }
      public Builder setRoundabout(boolean value) {
        bitField0_ |= 0x00000040;
        roundabout_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoundabout() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roundabout_ = false;
        onChanged();
        return this;
      }
      
      // optional bool isOneWay = 8;
      private boolean isOneWay_ ;
      public boolean hasIsOneWay() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getIsOneWay() {
        return isOneWay_;
      }
      public Builder setIsOneWay(boolean value) {
        bitField0_ |= 0x00000080;
        isOneWay_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsOneWay() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isOneWay_ = false;
        onChanged();
        return this;
      }
      
      // optional string ref = 9;
      private java.lang.Object ref_ = "";
      public boolean hasRef() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getRef() {
        java.lang.Object ref = ref_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ref_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRef(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        ref_ = value;
        onChanged();
        return this;
      }
      public Builder clearRef() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ref_ = getDefaultInstance().getRef();
        onChanged();
        return this;
      }
      void setRef(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        ref_ = value;
        onChanged();
      }
      
      // optional string destination = 10;
      private java.lang.Object destination_ = "";
      public boolean hasDestination() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getDestination() {
        java.lang.Object ref = destination_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          destination_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDestination(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        destination_ = value;
        onChanged();
        return this;
      }
      public Builder clearDestination() {
        bitField0_ = (bitField0_ & ~0x00000200);
        destination_ = getDefaultInstance().getDestination();
        onChanged();
        return this;
      }
      void setDestination(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        destination_ = value;
        onChanged();
      }
      
      // optional int32 weight = 11;
      private int weight_ ;
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getWeight() {
        return weight_;
      }
      public Builder setWeight(int value) {
        bitField0_ |= 0x00000400;
        weight_ = value;
        onChanged();
        return this;
      }
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000400);
        weight_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 12;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_ =
        java.util.Collections.emptyList();
      private void ensureAdditionalTagsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          additionalTags_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF>(additionalTags_);
          bitField0_ |= 0x00000800;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> additionalTagsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
        if (additionalTagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(additionalTags_);
        } else {
          return additionalTagsBuilder_.getMessageList();
        }
      }
      public int getAdditionalTagsCount() {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.size();
        } else {
          return additionalTagsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);
        } else {
          return additionalTagsBuilder_.getMessage(index);
        }
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAdditionalTags(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> values) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          super.addAll(values, additionalTags_);
          onChanged();
        } else {
          additionalTagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAdditionalTags() {
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          additionalTagsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.remove(index);
          onChanged();
        } else {
          additionalTagsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder getAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
          int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);  } else {
          return additionalTagsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
           getAdditionalTagsOrBuilderList() {
        if (additionalTagsBuilder_ != null) {
          return additionalTagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(additionalTags_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder() {
        return getAdditionalTagsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder> 
           getAdditionalTagsBuilderList() {
        return getAdditionalTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
          getAdditionalTagsFieldBuilder() {
        if (additionalTagsBuilder_ == null) {
          additionalTagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder>(
                  additionalTags_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          additionalTags_ = null;
        }
        return additionalTagsBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteNodePBF allUsedNodes = 13;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> allUsedNodes_ =
        java.util.Collections.emptyList();
      private void ensureAllUsedNodesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          allUsedNodes_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF>(allUsedNodes_);
          bitField0_ |= 0x00001000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder> allUsedNodesBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> getAllUsedNodesList() {
        if (allUsedNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allUsedNodes_);
        } else {
          return allUsedNodesBuilder_.getMessageList();
        }
      }
      public int getAllUsedNodesCount() {
        if (allUsedNodesBuilder_ == null) {
          return allUsedNodes_.size();
        } else {
          return allUsedNodesBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF getAllUsedNodes(int index) {
        if (allUsedNodesBuilder_ == null) {
          return allUsedNodes_.get(index);
        } else {
          return allUsedNodesBuilder_.getMessage(index);
        }
      }
      public Builder setAllUsedNodes(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF value) {
        if (allUsedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.set(index, value);
          onChanged();
        } else {
          allUsedNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAllUsedNodes(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder builderForValue) {
        if (allUsedNodesBuilder_ == null) {
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          allUsedNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllUsedNodes(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF value) {
        if (allUsedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.add(value);
          onChanged();
        } else {
          allUsedNodesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAllUsedNodes(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF value) {
        if (allUsedNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.add(index, value);
          onChanged();
        } else {
          allUsedNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAllUsedNodes(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder builderForValue) {
        if (allUsedNodesBuilder_ == null) {
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.add(builderForValue.build());
          onChanged();
        } else {
          allUsedNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAllUsedNodes(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder builderForValue) {
        if (allUsedNodesBuilder_ == null) {
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          allUsedNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAllUsedNodes(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF> values) {
        if (allUsedNodesBuilder_ == null) {
          ensureAllUsedNodesIsMutable();
          super.addAll(values, allUsedNodes_);
          onChanged();
        } else {
          allUsedNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAllUsedNodes() {
        if (allUsedNodesBuilder_ == null) {
          allUsedNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          allUsedNodesBuilder_.clear();
        }
        return this;
      }
      public Builder removeAllUsedNodes(int index) {
        if (allUsedNodesBuilder_ == null) {
          ensureAllUsedNodesIsMutable();
          allUsedNodes_.remove(index);
          onChanged();
        } else {
          allUsedNodesBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder getAllUsedNodesBuilder(
          int index) {
        return getAllUsedNodesFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder getAllUsedNodesOrBuilder(
          int index) {
        if (allUsedNodesBuilder_ == null) {
          return allUsedNodes_.get(index);  } else {
          return allUsedNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder> 
           getAllUsedNodesOrBuilderList() {
        if (allUsedNodesBuilder_ != null) {
          return allUsedNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allUsedNodes_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder addAllUsedNodesBuilder() {
        return getAllUsedNodesFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder addAllUsedNodesBuilder(
          int index) {
        return getAllUsedNodesFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder> 
           getAllUsedNodesBuilderList() {
        return getAllUsedNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder> 
          getAllUsedNodesFieldBuilder() {
        if (allUsedNodesBuilder_ == null) {
          allUsedNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBFOrBuilder>(
                  allUsedNodes_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          allUsedNodes_ = null;
        }
        return allUsedNodesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteEdgePBF)
    }
    
    static {
      defaultInstance = new CompleteEdgePBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteEdgePBF)
  }
  
  public interface CompleteVertexPBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
    boolean hasCoordinate();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder();
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> 
        getAdditionalTagsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index);
    int getAdditionalTagsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index);
  }
  public static final class CompleteVertexPBF extends
      com.google.protobuf.GeneratedMessage
      implements CompleteVertexPBFOrBuilder {
    // Use CompleteVertexPBF.newBuilder() to construct.
    private CompleteVertexPBF(Builder builder) {
      super(builder);
    }
    private CompleteVertexPBF(boolean noInit) {}
    
    private static final CompleteVertexPBF defaultInstance;
    public static CompleteVertexPBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public CompleteVertexPBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
    public static final int COORDINATE_FIELD_NUMBER = 2;
    private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF coordinate_;
    public boolean hasCoordinate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate() {
      return coordinate_;
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder() {
      return coordinate_;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
    public static final int ADDITIONALTAGS_FIELD_NUMBER = 3;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
      return additionalTags_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getAdditionalTagsOrBuilderList() {
      return additionalTags_;
    }
    public int getAdditionalTagsCount() {
      return additionalTags_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
      return additionalTags_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
        int index) {
      return additionalTags_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
      additionalTags_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCoordinate()) {
        if (!getCoordinate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAdditionalTagsCount(); i++) {
        if (!getAdditionalTags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, coordinate_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        output.writeMessage(3, additionalTags_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, coordinate_);
      }
      for (int i = 0; i < additionalTags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, additionalTags_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCoordinateFieldBuilder();
          getAdditionalTagsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (coordinateBuilder_ == null) {
          coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
        } else {
          coordinateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          additionalTagsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (coordinateBuilder_ == null) {
          result.coordinate_ = coordinate_;
        } else {
          result.coordinate_ = coordinateBuilder_.build();
        }
        if (additionalTagsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            additionalTags_ = java.util.Collections.unmodifiableList(additionalTags_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.additionalTags_ = additionalTags_;
        } else {
          result.additionalTags_ = additionalTagsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCoordinate()) {
          mergeCoordinate(other.getCoordinate());
        }
        if (additionalTagsBuilder_ == null) {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTags_.isEmpty()) {
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAdditionalTagsIsMutable();
              additionalTags_.addAll(other.additionalTags_);
            }
            onChanged();
          }
        } else {
          if (!other.additionalTags_.isEmpty()) {
            if (additionalTagsBuilder_.isEmpty()) {
              additionalTagsBuilder_.dispose();
              additionalTagsBuilder_ = null;
              additionalTags_ = other.additionalTags_;
              bitField0_ = (bitField0_ & ~0x00000004);
              additionalTagsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAdditionalTagsFieldBuilder() : null;
            } else {
              additionalTagsBuilder_.addAllMessages(other.additionalTags_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (hasCoordinate()) {
          if (!getCoordinate().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAdditionalTagsCount(); i++) {
          if (!getAdditionalTags(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder();
              if (hasCoordinate()) {
                subBuilder.mergeFrom(getCoordinate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCoordinate(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAdditionalTags(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional .org.mapsforge.preprocessing.routingGraph.graphCreation.GeoCoordinatePBF coordinate = 2;
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> coordinateBuilder_;
      public boolean hasCoordinate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF getCoordinate() {
        if (coordinateBuilder_ == null) {
          return coordinate_;
        } else {
          return coordinateBuilder_.getMessage();
        }
      }
      public Builder setCoordinate(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (coordinateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          coordinate_ = value;
          onChanged();
        } else {
          coordinateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setCoordinate(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder builderForValue) {
        if (coordinateBuilder_ == null) {
          coordinate_ = builderForValue.build();
          onChanged();
        } else {
          coordinateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeCoordinate(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF value) {
        if (coordinateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              coordinate_ != org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance()) {
            coordinate_ =
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.newBuilder(coordinate_).mergeFrom(value).buildPartial();
          } else {
            coordinate_ = value;
          }
          onChanged();
        } else {
          coordinateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearCoordinate() {
        if (coordinateBuilder_ == null) {
          coordinate_ = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.getDefaultInstance();
          onChanged();
        } else {
          coordinateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder getCoordinateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCoordinateFieldBuilder().getBuilder();
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder getCoordinateOrBuilder() {
        if (coordinateBuilder_ != null) {
          return coordinateBuilder_.getMessageOrBuilder();
        } else {
          return coordinate_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder> 
          getCoordinateFieldBuilder() {
        if (coordinateBuilder_ == null) {
          coordinateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBFOrBuilder>(
                  coordinate_,
                  getParentForChildren(),
                  isClean());
          coordinate_ = null;
        }
        return coordinateBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF additionalTags = 3;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> additionalTags_ =
        java.util.Collections.emptyList();
      private void ensureAdditionalTagsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          additionalTags_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF>(additionalTags_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> additionalTagsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getAdditionalTagsList() {
        if (additionalTagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(additionalTags_);
        } else {
          return additionalTagsBuilder_.getMessageList();
        }
      }
      public int getAdditionalTagsCount() {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.size();
        } else {
          return additionalTagsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);
        } else {
          return additionalTagsBuilder_.getMessage(index);
        }
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.set(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (additionalTagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, value);
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAdditionalTags(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAdditionalTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.add(index, builderForValue.build());
          onChanged();
        } else {
          additionalTagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAdditionalTags(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> values) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          super.addAll(values, additionalTags_);
          onChanged();
        } else {
          additionalTagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAdditionalTags() {
        if (additionalTagsBuilder_ == null) {
          additionalTags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          additionalTagsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAdditionalTags(int index) {
        if (additionalTagsBuilder_ == null) {
          ensureAdditionalTagsIsMutable();
          additionalTags_.remove(index);
          onChanged();
        } else {
          additionalTagsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder getAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getAdditionalTagsOrBuilder(
          int index) {
        if (additionalTagsBuilder_ == null) {
          return additionalTags_.get(index);  } else {
          return additionalTagsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
           getAdditionalTagsOrBuilderList() {
        if (additionalTagsBuilder_ != null) {
          return additionalTagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(additionalTags_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder() {
        return getAdditionalTagsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addAdditionalTagsBuilder(
          int index) {
        return getAdditionalTagsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder> 
           getAdditionalTagsBuilderList() {
        return getAdditionalTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
          getAdditionalTagsFieldBuilder() {
        if (additionalTagsBuilder_ == null) {
          additionalTagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder>(
                  additionalTags_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          additionalTags_ = null;
        }
        return additionalTagsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteVertexPBF)
    }
    
    static {
      defaultInstance = new CompleteVertexPBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteVertexPBF)
  }
  
  public interface CompleteRelationPBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF member = 1;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> 
        getMemberList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF getMember(int index);
    int getMemberCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder> 
        getMemberOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder getMemberOrBuilder(
        int index);
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF tags = 2;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> 
        getTagsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getTags(int index);
    int getTagsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getTagsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getTagsOrBuilder(
        int index);
  }
  public static final class CompleteRelationPBF extends
      com.google.protobuf.GeneratedMessage
      implements CompleteRelationPBFOrBuilder {
    // Use CompleteRelationPBF.newBuilder() to construct.
    private CompleteRelationPBF(Builder builder) {
      super(builder);
    }
    private CompleteRelationPBF(boolean noInit) {}
    
    private static final CompleteRelationPBF defaultInstance;
    public static CompleteRelationPBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public CompleteRelationPBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_fieldAccessorTable;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF member = 1;
    public static final int MEMBER_FIELD_NUMBER = 1;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> member_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> getMemberList() {
      return member_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder> 
        getMemberOrBuilderList() {
      return member_;
    }
    public int getMemberCount() {
      return member_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF getMember(int index) {
      return member_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder getMemberOrBuilder(
        int index) {
      return member_.get(index);
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF tags = 2;
    public static final int TAGS_FIELD_NUMBER = 2;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> tags_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getTagsList() {
      return tags_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
        getTagsOrBuilderList() {
      return tags_;
    }
    public int getTagsCount() {
      return tags_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getTags(int index) {
      return tags_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getTagsOrBuilder(
        int index) {
      return tags_.get(index);
    }
    
    private void initFields() {
      member_ = java.util.Collections.emptyList();
      tags_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getMemberCount(); i++) {
        if (!getMember(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getTagsCount(); i++) {
        if (!getTags(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < member_.size(); i++) {
        output.writeMessage(1, member_.get(i));
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeMessage(2, tags_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < member_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, member_.get(i));
      }
      for (int i = 0; i < tags_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tags_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMemberFieldBuilder();
          getTagsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (memberBuilder_ == null) {
          member_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          memberBuilder_.clear();
        }
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF(this);
        int from_bitField0_ = bitField0_;
        if (memberBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            member_ = java.util.Collections.unmodifiableList(member_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.member_ = member_;
        } else {
          result.member_ = memberBuilder_.build();
        }
        if (tagsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tags_ = java.util.Collections.unmodifiableList(tags_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tags_ = tags_;
        } else {
          result.tags_ = tagsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.getDefaultInstance()) return this;
        if (memberBuilder_ == null) {
          if (!other.member_.isEmpty()) {
            if (member_.isEmpty()) {
              member_ = other.member_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMemberIsMutable();
              member_.addAll(other.member_);
            }
            onChanged();
          }
        } else {
          if (!other.member_.isEmpty()) {
            if (memberBuilder_.isEmpty()) {
              memberBuilder_.dispose();
              memberBuilder_ = null;
              member_ = other.member_;
              bitField0_ = (bitField0_ & ~0x00000001);
              memberBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMemberFieldBuilder() : null;
            } else {
              memberBuilder_.addAllMessages(other.member_);
            }
          }
        }
        if (tagsBuilder_ == null) {
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
        } else {
          if (!other.tags_.isEmpty()) {
            if (tagsBuilder_.isEmpty()) {
              tagsBuilder_.dispose();
              tagsBuilder_ = null;
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tagsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTagsFieldBuilder() : null;
            } else {
              tagsBuilder_.addAllMessages(other.tags_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getMemberCount(); i++) {
          if (!getMember(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getTagsCount(); i++) {
          if (!getTags(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMember(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTags(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.RelationMemberPBF member = 1;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> member_ =
        java.util.Collections.emptyList();
      private void ensureMemberIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          member_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF>(member_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder> memberBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> getMemberList() {
        if (memberBuilder_ == null) {
          return java.util.Collections.unmodifiableList(member_);
        } else {
          return memberBuilder_.getMessageList();
        }
      }
      public int getMemberCount() {
        if (memberBuilder_ == null) {
          return member_.size();
        } else {
          return memberBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF getMember(int index) {
        if (memberBuilder_ == null) {
          return member_.get(index);
        } else {
          return memberBuilder_.getMessage(index);
        }
      }
      public Builder setMember(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.set(index, value);
          onChanged();
        } else {
          memberBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setMember(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.set(index, builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addMember(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.add(value);
          onChanged();
        } else {
          memberBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addMember(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF value) {
        if (memberBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMemberIsMutable();
          member_.add(index, value);
          onChanged();
        } else {
          memberBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addMember(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.add(builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addMember(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder builderForValue) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.add(index, builderForValue.build());
          onChanged();
        } else {
          memberBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllMember(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF> values) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          super.addAll(values, member_);
          onChanged();
        } else {
          memberBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearMember() {
        if (memberBuilder_ == null) {
          member_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          memberBuilder_.clear();
        }
        return this;
      }
      public Builder removeMember(int index) {
        if (memberBuilder_ == null) {
          ensureMemberIsMutable();
          member_.remove(index);
          onChanged();
        } else {
          memberBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder getMemberBuilder(
          int index) {
        return getMemberFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder getMemberOrBuilder(
          int index) {
        if (memberBuilder_ == null) {
          return member_.get(index);  } else {
          return memberBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder> 
           getMemberOrBuilderList() {
        if (memberBuilder_ != null) {
          return memberBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(member_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder addMemberBuilder() {
        return getMemberFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder addMemberBuilder(
          int index) {
        return getMemberFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder> 
           getMemberBuilderList() {
        return getMemberFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder> 
          getMemberFieldBuilder() {
        if (memberBuilder_ == null) {
          memberBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBFOrBuilder>(
                  member_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          member_ = null;
        }
        return memberBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.KeyValuePairPBF tags = 2;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> tags_ =
        java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tags_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF>(tags_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> tagsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> getTagsList() {
        if (tagsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tags_);
        } else {
          return tagsBuilder_.getMessageList();
        }
      }
      public int getTagsCount() {
        if (tagsBuilder_ == null) {
          return tags_.size();
        } else {
          return tagsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF getTags(int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);
        } else {
          return tagsBuilder_.getMessage(index);
        }
      }
      public Builder setTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addTags(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF value) {
        if (tagsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagsIsMutable();
          tags_.add(index, value);
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addTags(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addTags(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder builderForValue) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllTags(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF> values) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          super.addAll(values, tags_);
          onChanged();
        } else {
          tagsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearTags() {
        if (tagsBuilder_ == null) {
          tags_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tagsBuilder_.clear();
        }
        return this;
      }
      public Builder removeTags(int index) {
        if (tagsBuilder_ == null) {
          ensureTagsIsMutable();
          tags_.remove(index);
          onChanged();
        } else {
          tagsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder getTagsBuilder(
          int index) {
        return getTagsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder getTagsOrBuilder(
          int index) {
        if (tagsBuilder_ == null) {
          return tags_.get(index);  } else {
          return tagsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
           getTagsOrBuilderList() {
        if (tagsBuilder_ != null) {
          return tagsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tags_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addTagsBuilder() {
        return getTagsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder addTagsBuilder(
          int index) {
        return getTagsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder> 
           getTagsBuilderList() {
        return getTagsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder> 
          getTagsFieldBuilder() {
        if (tagsBuilder_ == null) {
          tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBFOrBuilder>(
                  tags_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tags_ = null;
        }
        return tagsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteRelationPBF)
    }
    
    static {
      defaultInstance = new CompleteRelationPBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteRelationPBF)
  }
  
  public interface AllGraphDataPBFOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteRelationPBF allRelations = 1;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> 
        getAllRelationsList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF getAllRelations(int index);
    int getAllRelationsCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder> 
        getAllRelationsOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder getAllRelationsOrBuilder(
        int index);
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteEdgePBF allEdges = 2;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> 
        getAllEdgesList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF getAllEdges(int index);
    int getAllEdgesCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder> 
        getAllEdgesOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder getAllEdgesOrBuilder(
        int index);
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteVertexPBF allVertices = 3;
    java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> 
        getAllVerticesList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF getAllVertices(int index);
    int getAllVerticesCount();
    java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder> 
        getAllVerticesOrBuilderList();
    org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder getAllVerticesOrBuilder(
        int index);
  }
  public static final class AllGraphDataPBF extends
      com.google.protobuf.GeneratedMessage
      implements AllGraphDataPBFOrBuilder {
    // Use AllGraphDataPBF.newBuilder() to construct.
    private AllGraphDataPBF(Builder builder) {
      super(builder);
    }
    private AllGraphDataPBF(boolean noInit) {}
    
    private static final AllGraphDataPBF defaultInstance;
    public static AllGraphDataPBF getDefaultInstance() {
      return defaultInstance;
    }
    
    public AllGraphDataPBF getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_fieldAccessorTable;
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteRelationPBF allRelations = 1;
    public static final int ALLRELATIONS_FIELD_NUMBER = 1;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> allRelations_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> getAllRelationsList() {
      return allRelations_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder> 
        getAllRelationsOrBuilderList() {
      return allRelations_;
    }
    public int getAllRelationsCount() {
      return allRelations_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF getAllRelations(int index) {
      return allRelations_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder getAllRelationsOrBuilder(
        int index) {
      return allRelations_.get(index);
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteEdgePBF allEdges = 2;
    public static final int ALLEDGES_FIELD_NUMBER = 2;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> allEdges_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> getAllEdgesList() {
      return allEdges_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder> 
        getAllEdgesOrBuilderList() {
      return allEdges_;
    }
    public int getAllEdgesCount() {
      return allEdges_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF getAllEdges(int index) {
      return allEdges_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder getAllEdgesOrBuilder(
        int index) {
      return allEdges_.get(index);
    }
    
    // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteVertexPBF allVertices = 3;
    public static final int ALLVERTICES_FIELD_NUMBER = 3;
    private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> allVertices_;
    public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> getAllVerticesList() {
      return allVertices_;
    }
    public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder> 
        getAllVerticesOrBuilderList() {
      return allVertices_;
    }
    public int getAllVerticesCount() {
      return allVertices_.size();
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF getAllVertices(int index) {
      return allVertices_.get(index);
    }
    public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder getAllVerticesOrBuilder(
        int index) {
      return allVertices_.get(index);
    }
    
    private void initFields() {
      allRelations_ = java.util.Collections.emptyList();
      allEdges_ = java.util.Collections.emptyList();
      allVertices_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getAllRelationsCount(); i++) {
        if (!getAllRelations(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAllEdgesCount(); i++) {
        if (!getAllEdges(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAllVerticesCount(); i++) {
        if (!getAllVertices(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < allRelations_.size(); i++) {
        output.writeMessage(1, allRelations_.get(i));
      }
      for (int i = 0; i < allEdges_.size(); i++) {
        output.writeMessage(2, allEdges_.get(i));
      }
      for (int i = 0; i < allVertices_.size(); i++) {
        output.writeMessage(3, allVertices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < allRelations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, allRelations_.get(i));
      }
      for (int i = 0; i < allEdges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, allEdges_.get(i));
      }
      for (int i = 0; i < allVertices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, allVertices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBFOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_fieldAccessorTable;
      }
      
      // Construct using org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllRelationsFieldBuilder();
          getAllEdgesFieldBuilder();
          getAllVerticesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (allRelationsBuilder_ == null) {
          allRelations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          allRelationsBuilder_.clear();
        }
        if (allEdgesBuilder_ == null) {
          allEdges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          allEdgesBuilder_.clear();
        }
        if (allVerticesBuilder_ == null) {
          allVertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          allVerticesBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.getDescriptor();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF getDefaultInstanceForType() {
        return org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.getDefaultInstance();
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF build() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF buildPartial() {
        org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF result = new org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF(this);
        int from_bitField0_ = bitField0_;
        if (allRelationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            allRelations_ = java.util.Collections.unmodifiableList(allRelations_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.allRelations_ = allRelations_;
        } else {
          result.allRelations_ = allRelationsBuilder_.build();
        }
        if (allEdgesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            allEdges_ = java.util.Collections.unmodifiableList(allEdges_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.allEdges_ = allEdges_;
        } else {
          result.allEdges_ = allEdgesBuilder_.build();
        }
        if (allVerticesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            allVertices_ = java.util.Collections.unmodifiableList(allVertices_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.allVertices_ = allVertices_;
        } else {
          result.allVertices_ = allVerticesBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF) {
          return mergeFrom((org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF other) {
        if (other == org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.getDefaultInstance()) return this;
        if (allRelationsBuilder_ == null) {
          if (!other.allRelations_.isEmpty()) {
            if (allRelations_.isEmpty()) {
              allRelations_ = other.allRelations_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAllRelationsIsMutable();
              allRelations_.addAll(other.allRelations_);
            }
            onChanged();
          }
        } else {
          if (!other.allRelations_.isEmpty()) {
            if (allRelationsBuilder_.isEmpty()) {
              allRelationsBuilder_.dispose();
              allRelationsBuilder_ = null;
              allRelations_ = other.allRelations_;
              bitField0_ = (bitField0_ & ~0x00000001);
              allRelationsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllRelationsFieldBuilder() : null;
            } else {
              allRelationsBuilder_.addAllMessages(other.allRelations_);
            }
          }
        }
        if (allEdgesBuilder_ == null) {
          if (!other.allEdges_.isEmpty()) {
            if (allEdges_.isEmpty()) {
              allEdges_ = other.allEdges_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAllEdgesIsMutable();
              allEdges_.addAll(other.allEdges_);
            }
            onChanged();
          }
        } else {
          if (!other.allEdges_.isEmpty()) {
            if (allEdgesBuilder_.isEmpty()) {
              allEdgesBuilder_.dispose();
              allEdgesBuilder_ = null;
              allEdges_ = other.allEdges_;
              bitField0_ = (bitField0_ & ~0x00000002);
              allEdgesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllEdgesFieldBuilder() : null;
            } else {
              allEdgesBuilder_.addAllMessages(other.allEdges_);
            }
          }
        }
        if (allVerticesBuilder_ == null) {
          if (!other.allVertices_.isEmpty()) {
            if (allVertices_.isEmpty()) {
              allVertices_ = other.allVertices_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAllVerticesIsMutable();
              allVertices_.addAll(other.allVertices_);
            }
            onChanged();
          }
        } else {
          if (!other.allVertices_.isEmpty()) {
            if (allVerticesBuilder_.isEmpty()) {
              allVerticesBuilder_.dispose();
              allVerticesBuilder_ = null;
              allVertices_ = other.allVertices_;
              bitField0_ = (bitField0_ & ~0x00000004);
              allVerticesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllVerticesFieldBuilder() : null;
            } else {
              allVerticesBuilder_.addAllMessages(other.allVertices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getAllRelationsCount(); i++) {
          if (!getAllRelations(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAllEdgesCount(); i++) {
          if (!getAllEdges(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAllVerticesCount(); i++) {
          if (!getAllVertices(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAllRelations(subBuilder.buildPartial());
              break;
            }
            case 18: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAllEdges(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder subBuilder = org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAllVertices(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteRelationPBF allRelations = 1;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> allRelations_ =
        java.util.Collections.emptyList();
      private void ensureAllRelationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          allRelations_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF>(allRelations_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder> allRelationsBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> getAllRelationsList() {
        if (allRelationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allRelations_);
        } else {
          return allRelationsBuilder_.getMessageList();
        }
      }
      public int getAllRelationsCount() {
        if (allRelationsBuilder_ == null) {
          return allRelations_.size();
        } else {
          return allRelationsBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF getAllRelations(int index) {
        if (allRelationsBuilder_ == null) {
          return allRelations_.get(index);
        } else {
          return allRelationsBuilder_.getMessage(index);
        }
      }
      public Builder setAllRelations(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF value) {
        if (allRelationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllRelationsIsMutable();
          allRelations_.set(index, value);
          onChanged();
        } else {
          allRelationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAllRelations(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder builderForValue) {
        if (allRelationsBuilder_ == null) {
          ensureAllRelationsIsMutable();
          allRelations_.set(index, builderForValue.build());
          onChanged();
        } else {
          allRelationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRelations(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF value) {
        if (allRelationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllRelationsIsMutable();
          allRelations_.add(value);
          onChanged();
        } else {
          allRelationsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAllRelations(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF value) {
        if (allRelationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllRelationsIsMutable();
          allRelations_.add(index, value);
          onChanged();
        } else {
          allRelationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAllRelations(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder builderForValue) {
        if (allRelationsBuilder_ == null) {
          ensureAllRelationsIsMutable();
          allRelations_.add(builderForValue.build());
          onChanged();
        } else {
          allRelationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAllRelations(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder builderForValue) {
        if (allRelationsBuilder_ == null) {
          ensureAllRelationsIsMutable();
          allRelations_.add(index, builderForValue.build());
          onChanged();
        } else {
          allRelationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAllRelations(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF> values) {
        if (allRelationsBuilder_ == null) {
          ensureAllRelationsIsMutable();
          super.addAll(values, allRelations_);
          onChanged();
        } else {
          allRelationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAllRelations() {
        if (allRelationsBuilder_ == null) {
          allRelations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          allRelationsBuilder_.clear();
        }
        return this;
      }
      public Builder removeAllRelations(int index) {
        if (allRelationsBuilder_ == null) {
          ensureAllRelationsIsMutable();
          allRelations_.remove(index);
          onChanged();
        } else {
          allRelationsBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder getAllRelationsBuilder(
          int index) {
        return getAllRelationsFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder getAllRelationsOrBuilder(
          int index) {
        if (allRelationsBuilder_ == null) {
          return allRelations_.get(index);  } else {
          return allRelationsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder> 
           getAllRelationsOrBuilderList() {
        if (allRelationsBuilder_ != null) {
          return allRelationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allRelations_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder addAllRelationsBuilder() {
        return getAllRelationsFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder addAllRelationsBuilder(
          int index) {
        return getAllRelationsFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder> 
           getAllRelationsBuilderList() {
        return getAllRelationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder> 
          getAllRelationsFieldBuilder() {
        if (allRelationsBuilder_ == null) {
          allRelationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBFOrBuilder>(
                  allRelations_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          allRelations_ = null;
        }
        return allRelationsBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteEdgePBF allEdges = 2;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> allEdges_ =
        java.util.Collections.emptyList();
      private void ensureAllEdgesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allEdges_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF>(allEdges_);
          bitField0_ |= 0x00000002;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder> allEdgesBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> getAllEdgesList() {
        if (allEdgesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allEdges_);
        } else {
          return allEdgesBuilder_.getMessageList();
        }
      }
      public int getAllEdgesCount() {
        if (allEdgesBuilder_ == null) {
          return allEdges_.size();
        } else {
          return allEdgesBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF getAllEdges(int index) {
        if (allEdgesBuilder_ == null) {
          return allEdges_.get(index);
        } else {
          return allEdgesBuilder_.getMessage(index);
        }
      }
      public Builder setAllEdges(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF value) {
        if (allEdgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllEdgesIsMutable();
          allEdges_.set(index, value);
          onChanged();
        } else {
          allEdgesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAllEdges(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder builderForValue) {
        if (allEdgesBuilder_ == null) {
          ensureAllEdgesIsMutable();
          allEdges_.set(index, builderForValue.build());
          onChanged();
        } else {
          allEdgesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEdges(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF value) {
        if (allEdgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllEdgesIsMutable();
          allEdges_.add(value);
          onChanged();
        } else {
          allEdgesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAllEdges(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF value) {
        if (allEdgesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllEdgesIsMutable();
          allEdges_.add(index, value);
          onChanged();
        } else {
          allEdgesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAllEdges(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder builderForValue) {
        if (allEdgesBuilder_ == null) {
          ensureAllEdgesIsMutable();
          allEdges_.add(builderForValue.build());
          onChanged();
        } else {
          allEdgesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAllEdges(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder builderForValue) {
        if (allEdgesBuilder_ == null) {
          ensureAllEdgesIsMutable();
          allEdges_.add(index, builderForValue.build());
          onChanged();
        } else {
          allEdgesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAllEdges(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF> values) {
        if (allEdgesBuilder_ == null) {
          ensureAllEdgesIsMutable();
          super.addAll(values, allEdges_);
          onChanged();
        } else {
          allEdgesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAllEdges() {
        if (allEdgesBuilder_ == null) {
          allEdges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          allEdgesBuilder_.clear();
        }
        return this;
      }
      public Builder removeAllEdges(int index) {
        if (allEdgesBuilder_ == null) {
          ensureAllEdgesIsMutable();
          allEdges_.remove(index);
          onChanged();
        } else {
          allEdgesBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder getAllEdgesBuilder(
          int index) {
        return getAllEdgesFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder getAllEdgesOrBuilder(
          int index) {
        if (allEdgesBuilder_ == null) {
          return allEdges_.get(index);  } else {
          return allEdgesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder> 
           getAllEdgesOrBuilderList() {
        if (allEdgesBuilder_ != null) {
          return allEdgesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allEdges_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder addAllEdgesBuilder() {
        return getAllEdgesFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder addAllEdgesBuilder(
          int index) {
        return getAllEdgesFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder> 
           getAllEdgesBuilderList() {
        return getAllEdgesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder> 
          getAllEdgesFieldBuilder() {
        if (allEdgesBuilder_ == null) {
          allEdgesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBFOrBuilder>(
                  allEdges_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          allEdges_ = null;
        }
        return allEdgesBuilder_;
      }
      
      // repeated .org.mapsforge.preprocessing.routingGraph.graphCreation.CompleteVertexPBF allVertices = 3;
      private java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> allVertices_ =
        java.util.Collections.emptyList();
      private void ensureAllVerticesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          allVertices_ = new java.util.ArrayList<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF>(allVertices_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder> allVerticesBuilder_;
      
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> getAllVerticesList() {
        if (allVerticesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allVertices_);
        } else {
          return allVerticesBuilder_.getMessageList();
        }
      }
      public int getAllVerticesCount() {
        if (allVerticesBuilder_ == null) {
          return allVertices_.size();
        } else {
          return allVerticesBuilder_.getCount();
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF getAllVertices(int index) {
        if (allVerticesBuilder_ == null) {
          return allVertices_.get(index);
        } else {
          return allVerticesBuilder_.getMessage(index);
        }
      }
      public Builder setAllVertices(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF value) {
        if (allVerticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllVerticesIsMutable();
          allVertices_.set(index, value);
          onChanged();
        } else {
          allVerticesBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAllVertices(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder builderForValue) {
        if (allVerticesBuilder_ == null) {
          ensureAllVerticesIsMutable();
          allVertices_.set(index, builderForValue.build());
          onChanged();
        } else {
          allVerticesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllVertices(org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF value) {
        if (allVerticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllVerticesIsMutable();
          allVertices_.add(value);
          onChanged();
        } else {
          allVerticesBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAllVertices(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF value) {
        if (allVerticesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllVerticesIsMutable();
          allVertices_.add(index, value);
          onChanged();
        } else {
          allVerticesBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAllVertices(
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder builderForValue) {
        if (allVerticesBuilder_ == null) {
          ensureAllVerticesIsMutable();
          allVertices_.add(builderForValue.build());
          onChanged();
        } else {
          allVerticesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAllVertices(
          int index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder builderForValue) {
        if (allVerticesBuilder_ == null) {
          ensureAllVerticesIsMutable();
          allVertices_.add(index, builderForValue.build());
          onChanged();
        } else {
          allVerticesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAllVertices(
          java.lang.Iterable<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF> values) {
        if (allVerticesBuilder_ == null) {
          ensureAllVerticesIsMutable();
          super.addAll(values, allVertices_);
          onChanged();
        } else {
          allVerticesBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAllVertices() {
        if (allVerticesBuilder_ == null) {
          allVertices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          allVerticesBuilder_.clear();
        }
        return this;
      }
      public Builder removeAllVertices(int index) {
        if (allVerticesBuilder_ == null) {
          ensureAllVerticesIsMutable();
          allVertices_.remove(index);
          onChanged();
        } else {
          allVerticesBuilder_.remove(index);
        }
        return this;
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder getAllVerticesBuilder(
          int index) {
        return getAllVerticesFieldBuilder().getBuilder(index);
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder getAllVerticesOrBuilder(
          int index) {
        if (allVerticesBuilder_ == null) {
          return allVertices_.get(index);  } else {
          return allVerticesBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder> 
           getAllVerticesOrBuilderList() {
        if (allVerticesBuilder_ != null) {
          return allVerticesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allVertices_);
        }
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder addAllVerticesBuilder() {
        return getAllVerticesFieldBuilder().addBuilder(
            org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.getDefaultInstance());
      }
      public org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder addAllVerticesBuilder(
          int index) {
        return getAllVerticesFieldBuilder().addBuilder(
            index, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.getDefaultInstance());
      }
      public java.util.List<org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder> 
           getAllVerticesBuilderList() {
        return getAllVerticesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder> 
          getAllVerticesFieldBuilder() {
        if (allVerticesBuilder_ == null) {
          allVerticesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder, org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBFOrBuilder>(
                  allVertices_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          allVertices_ = null;
        }
        return allVerticesBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.AllGraphDataPBF)
    }
    
    static {
      defaultInstance = new AllGraphDataPBF(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.mapsforge.preprocessing.routingGraph.graphCreation.AllGraphDataPBF)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:org/mapsforge/routing/preprocessing/gr" +
      "aph/pbf-Config.proto\0226org.mapsforge.prep" +
      "rocessing.routingGraph.graphCreation\"7\n\020" +
      "GeoCoordinatePBF\022\020\n\010latitude\030\001 \002(\001\022\021\n\tlo" +
      "ngitude\030\002 \002(\001\"-\n\017KeyValuePairPBF\022\r\n\005valu" +
      "e\030\001 \001(\t\022\013\n\003key\030\002 \002(\t\"\322\001\n\021RelationMemberP" +
      "BF\022\020\n\010memberId\030\001 \002(\004\022h\n\nmemberType\030\002 \001(\016" +
      "2T.org.mapsforge.preprocessing.routingGr" +
      "aph.graphCreation.RelationMemberPBF.Memb" +
      "erType\022\022\n\nmemberRole\030\003 \001(\t\"-\n\nMemberType",
      "\022\010\n\004NODE\020\001\022\007\n\003WAY\020\002\022\014\n\010RELATION\020\003\"\334\001\n\017Co" +
      "mpleteNodePBF\022\n\n\002id\030\001 \002(\005\022\\\n\ncoordinate\030" +
      "\002 \001(\0132H.org.mapsforge.preprocessing.rout" +
      "ingGraph.graphCreation.GeoCoordinatePBF\022" +
      "_\n\016additionalTags\030\003 \003(\0132G.org.mapsforge." +
      "preprocessing.routingGraph.graphCreation" +
      ".KeyValuePairPBF\"\325\003\n\017CompleteEdgePBF\022\n\n\002" +
      "id\030\001 \002(\005\022\020\n\010sourceID\030\002 \001(\005\022\020\n\010targetID\030\003" +
      " \001(\005\022^\n\014allWaypoints\030\004 \003(\0132H.org.mapsfor" +
      "ge.preprocessing.routingGraph.graphCreat",
      "ion.GeoCoordinatePBF\022\014\n\004name\030\005 \001(\t\022\014\n\004ty" +
      "pe\030\006 \001(\t\022\022\n\nroundabout\030\007 \001(\010\022\020\n\010isOneWay" +
      "\030\010 \001(\010\022\013\n\003ref\030\t \001(\t\022\023\n\013destination\030\n \001(\t" +
      "\022\016\n\006weight\030\013 \001(\005\022_\n\016additionalTags\030\014 \003(\013" +
      "2G.org.mapsforge.preprocessing.routingGr" +
      "aph.graphCreation.KeyValuePairPBF\022]\n\014all" +
      "UsedNodes\030\r \003(\0132G.org.mapsforge.preproce" +
      "ssing.routingGraph.graphCreation.Complet" +
      "eNodePBF\"\336\001\n\021CompleteVertexPBF\022\n\n\002id\030\001 \002" +
      "(\005\022\\\n\ncoordinate\030\002 \001(\0132H.org.mapsforge.p",
      "reprocessing.routingGraph.graphCreation." +
      "GeoCoordinatePBF\022_\n\016additionalTags\030\003 \003(\013" +
      "2G.org.mapsforge.preprocessing.routingGr" +
      "aph.graphCreation.KeyValuePairPBF\"\307\001\n\023Co" +
      "mpleteRelationPBF\022Y\n\006member\030\001 \003(\0132I.org." +
      "mapsforge.preprocessing.routingGraph.gra" +
      "phCreation.RelationMemberPBF\022U\n\004tags\030\002 \003" +
      "(\0132G.org.mapsforge.preprocessing.routing" +
      "Graph.graphCreation.KeyValuePairPBF\"\257\002\n\017" +
      "AllGraphDataPBF\022a\n\014allRelations\030\001 \003(\0132K.",
      "org.mapsforge.preprocessing.routingGraph" +
      ".graphCreation.CompleteRelationPBF\022Y\n\010al" +
      "lEdges\030\002 \003(\0132G.org.mapsforge.preprocessi" +
      "ng.routingGraph.graphCreation.CompleteEd" +
      "gePBF\022^\n\013allVertices\030\003 \003(\0132I.org.mapsfor" +
      "ge.preprocessing.routingGraph.graphCreat" +
      "ion.CompleteVertexPBFB?\n)org.mapsforge.r" +
      "outing.preprocessing.graphB\022GraphCreator" +
      "Protos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_GeoCoordinatePBF_descriptor,
              new java.lang.String[] { "Latitude", "Longitude", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.GeoCoordinatePBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_KeyValuePairPBF_descriptor,
              new java.lang.String[] { "Value", "Key", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.KeyValuePairPBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_RelationMemberPBF_descriptor,
              new java.lang.String[] { "MemberId", "MemberType", "MemberRole", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.RelationMemberPBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteNodePBF_descriptor,
              new java.lang.String[] { "Id", "Coordinate", "AdditionalTags", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteNodePBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteEdgePBF_descriptor,
              new java.lang.String[] { "Id", "SourceID", "TargetID", "AllWaypoints", "Name", "Type", "Roundabout", "IsOneWay", "Ref", "Destination", "Weight", "AdditionalTags", "AllUsedNodes", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteEdgePBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteVertexPBF_descriptor,
              new java.lang.String[] { "Id", "Coordinate", "AdditionalTags", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteVertexPBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_CompleteRelationPBF_descriptor,
              new java.lang.String[] { "Member", "Tags", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.CompleteRelationPBF.Builder.class);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mapsforge_preprocessing_routingGraph_graphCreation_AllGraphDataPBF_descriptor,
              new java.lang.String[] { "AllRelations", "AllEdges", "AllVertices", },
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.class,
              org.mapsforge.routing.preprocessing.graph.GraphCreatorProtos.AllGraphDataPBF.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
